//
//  NewAgentViewController.m
//  BusinessPay
//
//  Created by zm on 29/4/15.
//  Copyright (c) 2015年 Tears. All rights reserved.
//

#import "NewAgentViewController.h"
#import "UserUpgradeToAgent.h"

@interface NewAgentViewController ()

@end

@implementation NewAgentViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    User *user = [User shareUser];
    
    self.fateLabel.text =[NSString stringWithFormat:@"%@%%", user.nocCardFeeRete];
   
}



//点击确定
-(IBAction)sureUpgradeAction:(id)sender{
    
    UserUpgradeToAgent *usertoagent = [[UserUpgradeToAgent alloc]init];
    usertoagent.delegate = self;
    usertoagent.trancode = @"701191";  //交易码
    
    User *user = [User shareUser];
    
    usertoagent.fateNum = user.nocCardFeeRete;;  //费率
    
    NSUserDefaults *us = [NSUserDefaults standardUserDefaults];
    NSString *lognumstr = [us objectForKey:@"phoneNumber"];  //得到电话号码    
    usertoagent.LoginPhoneNum = lognumstr;
    
    usertoagent.toVerifiedNum = self.BeVerifiedNum;
    
    [usertoagent sureUpgradeRequest];
    
     
}

- (void)UserToAgentSuccessWithMessage: (NSString *)message{

    NSLog(@"UserToAgentSuccessWithMessage-message-----%@",message);
}

- (void)UserToAgentFildWithMessage: (NSString *)message{
    NSLog(@"UserToAgentFildWithMessage-message-----%@",message);

}



//点击号码选择
-(IBAction)telePhoneNumChange:(id)sender{

    if (!_picker) {
        _picker=[[ABPeoplePickerNavigationController alloc] init ];
        _picker.peoplePickerDelegate=self;
    }
    
    [self presentViewController:_picker animated:YES completion:nil];

}


#pragma  mark - ABdelegate


- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController*)peoplePicker didSelectPerson:(ABRecordRef)person property:(ABPropertyID)property identifier:(ABMultiValueIdentifier)identifier
{
    if (property==kABPersonPhoneProperty) {
        ABMutableMultiValueRef phoneMulti=ABRecordCopyValue(person, property);
        int index=(int) ABMultiValueGetIndexForIdentifier(phoneMulti,identifier);
        NSString *phone=(__bridge NSString*)ABMultiValueCopyValueAtIndex(phoneMulti, index);
        
        if([phone rangeOfString:@"+"].location!=NSNotFound)
        {
            _BeVerifiedNum=[phone substringWithRange:NSMakeRange(0, 3)];
            _BeVerifiedNum=[_BeVerifiedNum stringByReplacingOccurrencesOfString:@"-" withString:@""];
        }else
        {
            _BeVerifiedNum=[phone stringByReplacingOccurrencesOfString:@"-" withString:@""];
            //NSLog(@"phoneNew=%@",phoneNew);
        }
        
        
        
        self.PhoneNum.text=_BeVerifiedNum;
        
//        [UIComponentService showHudWithStatus:ValidationPhoneNow];
        
        
        [self performSelector:@selector(phoneNumberValidation:) withObject:_BeVerifiedNum afterDelay:0.0f];
        
        [peoplePicker dismissViewControllerAnimated:YES completion:nil];
    }
    
}


-(BOOL)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)peoplePicker shouldContinueAfterSelectingPerson:(ABRecordRef)person
{
    return YES;
    
}

-(BOOL)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)peoplePicker shouldContinueAfterSelectingPerson:(ABRecordRef)person property:(ABPropertyID)property identifier:(ABMultiValueIdentifier)identifier
{
    if (property==kABPersonPhoneProperty) {
        ABMutableMultiValueRef phoneMulti=ABRecordCopyValue(person, property);
        int index= (int)ABMultiValueGetIndexForIdentifier(phoneMulti,identifier);
        NSString *phone=(__bridge NSString*)ABMultiValueCopyValueAtIndex(phoneMulti, index);
        
        
        if([phone rangeOfString:@"+"].location!=NSNotFound)
        {
            _BeVerifiedNum=[phone substringWithRange:NSMakeRange(0, 3)];
            _BeVerifiedNum=[_BeVerifiedNum stringByReplacingOccurrencesOfString:@"-" withString:@""];
        }else
        {
            _BeVerifiedNum=[phone stringByReplacingOccurrencesOfString:@"-" withString:@""];
            //NSLog(@"号码是：%@",phoneNew);
        }
        
        
        
        self.PhoneNum.text=_BeVerifiedNum;
        
//        [UIComponentService showHudWithStatus:ValidationPhoneNow];
        
        [self performSelector:@selector(phoneNumberValidation:) withObject:_BeVerifiedNum afterDelay:0.0f];
        
        
        
        [peoplePicker dismissViewControllerAnimated:YES completion:nil];
    }
    
    
    return NO;
    
}

-(void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)peoplePicker
{
    [_picker dismissViewControllerAnimated:YES completion:nil];
    
}





//手机号验证
- (void)phoneNumberValidation:(NSString *)phoneNumber
{
    NSUserDefaults* ud = [NSUserDefaults standardUserDefaults];
    
    NSString * currentPhoneNumber = [ud objectForKey:@"phoneNumber"];  //得到电话号码
    
   
    
    NSLog(@"currentPhoneNumber----%@",currentPhoneNumber);
    
    PhoneNumValidation * phoneValidation = [[PhoneNumValidation alloc] init];
    phoneValidation.delegate = self;
    
    NSLog(@"self.BeVerifiedNum---%@",self.BeVerifiedNum);
    NSLog(@"self.BeVerifiedNum---%@",phoneNumber);
    
    phoneValidation.trancode = kTrancode_PhoneNumValidation;
    phoneValidation.VerifiedNum = self.BeVerifiedNum;
    phoneValidation.CurrentLoginPhoneNum = currentPhoneNumber;
    [phoneValidation phoneNumValidationRequest];
}

- (void)NumberValidationSuccessWithMessage: (NSString *)message{
    
   [UIComponentService showFailHudWithStatus:@"号码可以使用!"];

}



- (void)NumberValidationFildWithMessage: (NSString *)message
{
    if (_phonevalidation.error) {
        //[ showWarmingWithMessage:@"网络请求失败"];
        [UIComponentService showFailHudWithStatus:@"网络请求失败"];
        return;
    }
    else
    {
        [UIComponentService showFailHudWithStatus:message];
    }
}


@end
